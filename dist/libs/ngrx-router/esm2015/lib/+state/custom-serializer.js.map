{"version":3,"file":"custom-serializer.js","sourceRoot":"","sources":["../../../../../../libs/ngrx-router/src/lib/+state/custom-serializer.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;AAG3C,MAAM,OAAO,gBAAgB;IAC3B,SAAS,CAAC,WAAgC;QACxC,MAAM,EAAE,GAAG,EAAE,GAAG,WAAW,CAAC;QAC5B,MAAM,EAAE,WAAW,EAAE,GAAG,WAAW,CAAC,IAAI,CAAC;QAEzC,IAAI,KAAK,GAA2B,WAAW,CAAC,IAAI,CAAC;QACrD,OAAO,KAAK,CAAC,UAAU,EAAE;YACvB,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC;SAC1B;QACD,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;QAEzB,OAAO,EAAE,GAAG,EAAE,WAAW,EAAE,MAAM,EAAE,CAAC;IACtC,CAAC;;gFAZU,gBAAgB;wDAAhB,gBAAgB,WAAhB,gBAAgB;uFAAhB,gBAAgB;cAD5B,UAAU","sourcesContent":["import { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport * as fromRouter from '@ngrx/router-store';\nimport { ActionReducerMap, createFeatureSelector } from '@ngrx/store';\n\nimport { RouterState, RouterStateUrl } from './router.interfaces';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CustomSerializer implements fromRouter.RouterStateSerializer<RouterStateUrl> {\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    const { url } = routerState;\n    const { queryParams } = routerState.root;\n\n    let state: ActivatedRouteSnapshot = routerState.root;\n    while (state.firstChild) {\n      state = state.firstChild;\n    }\n    const { params } = state;\n\n    return { url, queryParams, params };\n  }\n}\n"]}