{"version":3,"file":"vms-ngrx-router.js","sources":["../../../../libs/ngrx-router/src/lib/+state/custom-serializer.ts","../../../../libs/ngrx-router/src/lib/+state/router.actions.ts","../../../../libs/ngrx-router/src/lib/+state/router.effects.ts","../../../../libs/ngrx-router/src/lib/+state/router.interfaces.ts","../../../../libs/ngrx-router/src/lib/ngrx-router.module.ts","../../../../libs/ngrx-router/src/vms-ngrx-router.ts"],"sourcesContent":["import { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport * as fromRouter from '@ngrx/router-store';\nimport { ActionReducerMap, createFeatureSelector } from '@ngrx/store';\n\nimport { RouterState, RouterStateUrl } from './router.interfaces';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CustomSerializer implements fromRouter.RouterStateSerializer<RouterStateUrl> {\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    const { url } = routerState;\n    const { queryParams } = routerState.root;\n\n    let state: ActivatedRouteSnapshot = routerState.root;\n    while (state.firstChild) {\n      state = state.firstChild;\n    }\n    const { params } = state;\n\n    return { url, queryParams, params };\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { NgrxRoute } from './router.interfaces';\n\nexport const go = createAction('[router] Go', props<{ to: NgrxRoute }>());\nexport const back = createAction('[router] BACK');\nexport const forward = createAction('[router] FORWARD');\n","import { Location } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport { map, tap } from 'rxjs/operators';\nimport * as RouterActions from './router.actions';\n\n@Injectable()\nexport class RouterEffects {\n  navigate$ = createEffect(\n    () =>\n      this.action$.pipe(\n        ofType(RouterActions.go),\n        map(action => action.to),\n        tap(({ path, query: queryParams, extras }) => this.router.navigate(path, { queryParams, ...extras })),\n      ),\n    { dispatch: false },\n  );\n\n  navigateBack$ = createEffect(\n    () =>\n      this.action$.pipe(\n        ofType(RouterActions.back),\n        tap(() => this.location.back()),\n      ),\n    { dispatch: false },\n  );\n\n  navigateForward$ = createEffect(\n    () =>\n      this.action$.pipe(\n        ofType(RouterActions.forward),\n        tap(() => this.location.forward()),\n      ),\n    { dispatch: false },\n  );\n\n  constructor(private action$: Actions, private router: Router, private location: Location) {}\n}\n","import { Params, NavigationExtras } from '@angular/router';\nimport * as fromRouter from '@ngrx/router-store';\n\nexport const ngrxRouterFeatureKey = 'router';\n\nexport interface RouterStateUrl {\n  url: string;\n  queryParams: Params;\n  params: Params;\n}\n\nexport interface RouterState {\n  readonly [ngrxRouterFeatureKey]: fromRouter.RouterReducerState<RouterStateUrl>;\n}\n\nexport interface NgrxRoute {\n  path: any[];\n  query?: object;\n  extras?: NavigationExtras;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { routerReducer, RouterStateSerializer, StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { StoreModule } from '@ngrx/store';\n\nimport { CustomSerializer } from './+state/custom-serializer';\nimport { RouterEffects } from './+state/router.effects';\nimport { ngrxRouterFeatureKey } from './+state/router.interfaces';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(ngrxRouterFeatureKey, routerReducer),\n    EffectsModule.forFeature([RouterEffects]),\n    StoreRouterConnectingModule.forRoot({ stateKey: ngrxRouterFeatureKey }),\n  ],\n  providers: [RouterEffects, [{ provide: RouterStateSerializer, useClass: CustomSerializer }]],\n})\nexport class NgrxRouterModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["RouterActions.go","RouterActions.back","RouterActions.forward"],"mappings":"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"}