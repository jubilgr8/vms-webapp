{"version":3,"sources":["./apps/vms-web/src/main.ts","./libs/ngrx-error/src/lib/+state/ngrx-error.reducer.ts","./libs/ngrx-error/src/lib/+state/ngrx-error.effects.ts","./libs/ngrx-router/src/lib/+state/router.actions.ts","./libs/auth/src/lib/+state/auth.actions.ts","./libs/ngrx-forms/src/lib/ngrx-forms.module.ts","./libs/ngrx-error/src/index.ts","./libs/auth/src/lib/local-storage-jwt.service.ts","./libs/ngrx-forms/src/lib/dynamic-form/dynamic-form.component.ts","./libs/ngrx-forms/src/lib/dynamic-form/dynamic-form.component.html","./libs/auth/src/lib/+state/auth.facade.ts","./libs/api/src/index.ts","./libs/ngrx-forms/src/index.ts","./libs/auth/src/lib/auth.module.ts","./libs/ngrx-router/src/index.ts","./libs/auth/src/lib/login/login.component.ts","./libs/auth/src/lib/login/login.component.html","./libs/ngrx-forms/src/lib/fields/input/input.component.ts","./libs/ngrx-forms/src/lib/fields/input/input.component.html","./libs/ngrx-router/src/lib/+state/custom-serializer.ts","./libs/auth/src/lib/auth-guard.service.ts","./libs/auth/src/lib/+state/auth.effects.ts","./libs/auth/src/lib/+state/auth.selectors.ts","./libs/auth/src/lib/+state/auth.reducer.ts","./libs/auth/src/lib/auth.service.ts","./apps/vms-web/src/app/app.module.ts","./libs/ngrx-forms/src/lib/+state/ngrx-forms.actions.ts","./libs/ngrx-error/src/lib/+state/ngrx-error.facade.ts","./libs/ngrx-forms/src/lib/list-errors/list-errors.component.ts","./libs/ngrx-forms/src/lib/list-errors/list-errors.component.html","./apps/vms-web/src/app/layout/navbar/navbar.component.ts","./apps/vms-web/src/app/layout/navbar/navbar.component.html","./libs/ngrx-error/src/lib/ngrx-error.module.ts","./libs/ngrx-forms/src/lib/+state/ngrx-forms.selectors.ts","./apps/vms-web/$_lazy_route_resource lazy namespace object","./libs/ngrx-router/src/lib/+state/router.effects.ts","./apps/vms-web/src/app/layout/footer/footer.component.ts","./apps/vms-web/src/app/layout/footer/footer.component.html","./libs/ngrx-forms/src/lib/+state/ngrx-forms.effects.ts","./libs/ngrx-forms/src/lib/dynamic-form/dynamic-field.directive.ts","./libs/ngrx-error/src/lib/+state/ngrx-error.actions.ts","./apps/vms-web/src/environments/environment.ts","./libs/ngrx-router/src/lib/ngrx-router.module.ts","./libs/auth/src/index.ts","./libs/auth/src/lib/register/register.component.ts","./libs/auth/src/lib/register/register.component.html","./libs/ngrx-error/src/lib/ngrx-error-interceptor.service.ts","./libs/ngrx-forms/src/lib/+state/ngrx-forms.reducer.ts","./apps/vms-web/src/app/app.component.ts","./apps/vms-web/src/app/app.component.html","./libs/auth/src/lib/token-interceptor.service.ts","./libs/api/src/lib/api.module.ts","./libs/ngrx-forms/src/lib/+state/ngrx-forms.facade.ts","./libs/ngrx-router/src/lib/+state/router.interfaces.ts","./libs/api/src/lib/api.service.ts","./libs/ngrx-forms/src/lib/fields/textarea/textarea.component.ts","./libs/ngrx-forms/src/lib/fields/textarea/textarea.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import { Action, createReducer, on } from '@ngrx/store';\nimport * as NgrxErrorActions from './ngrx-error.actions';\n\nexport const ngrxErrorFeatureKey = 'ngrxError';\n\nexport interface NgrxError {\n  code: number;\n  message?: string;\n}\n\nexport interface NgrxErrorState {\n  readonly [ngrxErrorFeatureKey]: NgrxError;\n}\n\nexport const ngrxErrorInitialState: NgrxError = {\n  code: -1,\n};\n\nconst reducer = createReducer(\n  ngrxErrorInitialState,\n  on(NgrxErrorActions.throw401Error, (state, action) => ({ code: action.error.status, message: action.error.message })),\n  on(NgrxErrorActions.throw404Error, (state, action) => ({ code: action.error.status, message: action.error.message })),\n);\n\nexport function ngrxErrorReducer(state: NgrxError | undefined, action: Action): NgrxError {\n  return reducer(state, action);\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport { map } from 'rxjs/operators';\nimport * as NgrxErrorActions from './ngrx-error.actions';\nimport { go } from '@vms/ngrx-router';\n\n@Injectable()\nexport class NgrxErrorEffects {\n  error401$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(NgrxErrorActions.throw401Error),\n      map(_ => go({ to: { path: ['/login'] } })),\n    ),\n  );\n\n  error404$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(NgrxErrorActions.throw404Error),\n      map(_ => go({ to: { path: ['/'] } })),\n    ),\n  );\n\n  constructor(private actions$: Actions) {}\n}\n","import { createAction, props } from '@ngrx/store';\nimport { NgrxRoute } from './router.interfaces';\n\nexport const go = createAction('[router] Go', props<{ to: NgrxRoute }>());\nexport const back = createAction('[router] BACK');\nexport const forward = createAction('[router] FORWARD');\n","import { User } from 'libs/api/src/index';\nimport { createAction, props } from '@ngrx/store';\n\nexport const getUser = createAction('[auth] GET_USER');\n\nexport const getUserSuccess = createAction('[auth] GET_USER_SUCCESS', props<{ user: User }>());\n\nexport const getUserFail = createAction('[auth] GET_USER_FAIL', props<{ error: Error }>());\n\nexport const login = createAction('[auth] LOGIN');\n\nexport const loginSuccess = createAction('[auth] LOGIN_SUCCESS', props<{ user: User }>());\n\nexport const loginFail = createAction('[auth] LOGIN_FAIL');\n\nexport const register = createAction('[auth] REGISTER');\n\nexport const registerSuccess = createAction('[auth] REGISTER_SUCCESS', props<{ user: User }>());\n\nexport const registerFail = createAction('[auth] REGISTER_FAIL');\n\nexport const logout = createAction('[auth] LOGOUT');\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { NgrxFormsEffects } from './+state/ngrx-forms.effects';\nimport { NgrxFormsFacade } from './+state/ngrx-forms.facade';\nimport { ngrxFormsInitialState, ngrxFormsReducer, ngrxFormsFeatureKey } from './+state/ngrx-forms.reducer';\nimport { DynamicFieldDirective } from './dynamic-form/dynamic-field.directive';\nimport { DynamicFormComponent } from './dynamic-form/dynamic-form.component';\nimport { InputComponent } from './fields/input/input.component';\nimport { TextareaComponent } from './fields/textarea/textarea.component';\nimport { ListErrorsComponent } from './list-errors/list-errors.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    StoreModule.forFeature(ngrxFormsFeatureKey, ngrxFormsReducer, {\n      initialState: ngrxFormsInitialState,\n    }),\n    EffectsModule.forFeature([NgrxFormsEffects]),\n  ],\n  providers: [NgrxFormsEffects, NgrxFormsFacade],\n  declarations: [DynamicFormComponent, DynamicFieldDirective, InputComponent, TextareaComponent, ListErrorsComponent],\n  entryComponents: [InputComponent, TextareaComponent],\n  exports: [DynamicFormComponent, ListErrorsComponent],\n})\nexport class NgrxFormsModule {}\n","export { NgrxErrorModule } from './lib/ngrx-error.module';\n","import { Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LocalStorageJwtService {\n  getItem(): Observable<string | null> {\n    const data = localStorage.getItem('jwtToken');\n    if (data) {\n      return of(data);\n    }\n    return of(null);\n  }\n\n  setItem(data: string): Observable<string> {\n    localStorage.setItem('jwtToken', data);\n    return of(data);\n  }\n\n  removeItem(): Observable<boolean> {\n    localStorage.removeItem('jwtToken');\n    return of(true);\n  }\n}\n","import { Field } from '../+state/ngrx-forms.interfaces';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, OnDestroy, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Observable, Subject, combineLatest } from 'rxjs';\nimport { debounceTime, map, takeUntil, tap, filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  styleUrls: ['./dynamic-form.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DynamicFormComponent implements OnInit, OnDestroy {\n  @Input() structure$: Observable<Field[]>;\n  @Input() data$: Observable<any>;\n  @Input() touchedForm$: Observable<boolean>;\n  @Output() updateForm: EventEmitter<any> = new EventEmitter();\n  unsubscribe$: Subject<void> = new Subject();\n  form: FormGroup;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.structure$\n      .pipe(\n        map(this.formBuilder),\n        tap(f => (this.form = f)),\n        tap(f => this.listenFormChanges(f)),\n        f$ => combineLatest([f$, this.data$]),\n        takeUntil(this.unsubscribe$),\n      )\n      .subscribe(this.patchValue);\n\n    if (this.touchedForm$) {\n      this.touchedForm$\n        .pipe(\n          filter(t => !t && !!this.form),\n          takeUntil(this.unsubscribe$),\n        )\n        .subscribe(_ => this.form.reset());\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  private formBuilder = (structure: Field[]): FormGroup => {\n    const group = this.fb.group({});\n    structure.forEach(field => group.addControl(field.name, this.control(field)));\n    return group;\n  };\n\n  private control = (field: Field): FormControl => {\n    return this.fb.control('', field.validator);\n  };\n\n  private patchValue = ([form, data]) => {\n    !!data ? form.patchValue(data, { emitEvent: false }) : form.patchValue({}, { emitEvent: false });\n  };\n\n  private listenFormChanges(form: FormGroup) {\n    form.valueChanges\n      .pipe(\n        debounceTime(100),\n        takeUntil(this.unsubscribe$),\n      )\n      .subscribe((changes: any) => this.updateForm.emit(changes));\n  }\n}\n","<form class=\"dynamic-form\" [formGroup]=\"form\" autocomplete=\"off\">\n  <ng-container *ngFor=\"let field of structure$ | async\" appDynamicField [field]=\"field\" [group]=\"form\"> </ng-container>\n</form>\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { AuthState } from './auth.reducer';\nimport { authQuery } from './auth.selectors';\nimport * as AuthActions from './auth.actions';\n\n@Injectable()\nexport class AuthFacade {\n  auht$ = this.store.select(authQuery.getAuth);\n  user$ = this.store.select(authQuery.getUser);\n  isLoggedIn$ = this.store.select(authQuery.getLoggedIn);\n\n  constructor(private store: Store<AuthState>) {}\n\n  login() {\n    this.store.dispatch(AuthActions.login());\n  }\n\n  logout() {\n    this.store.dispatch(AuthActions.logout());\n  }\n\n  register() {\n    this.store.dispatch(AuthActions.register());\n  }\n\n  user() {\n    this.store.dispatch(AuthActions.getUser());\n  }\n}\n","export { ApiModule } from './lib/api.module';\nexport { ApiService } from './lib/api.service';\nexport * from './lib/shared.interfaces';\n","export { NgrxFormsModule } from './lib/ngrx-forms.module';\nexport * from './lib/+state/ngrx-forms.actions';\nexport * from './lib/+state/ngrx-forms.reducer';\nexport * from './lib/+state/ngrx-forms.facade';\nexport * from './lib/+state/ngrx-forms.interfaces';\n","// import { NgrxFormsModule } from '@vms/ngrx-forms';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { NgrxFormsModule } from 'libs/ngrx-forms/src';\n\nimport { AuthEffects } from './+state/auth.effects';\nimport { AuthFacade } from './+state/auth.facade';\nimport { authInitialState, authReducer, authFeatureKey } from './+state/auth.reducer';\nimport { AuthGuardService } from './auth-guard.service';\nimport { AuthService } from './auth.service';\nimport { LocalStorageJwtService } from './local-storage-jwt.service';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { TokenInterceptorService } from './token-interceptor.service';\n\nconst authRouting = RouterModule.forChild([\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n  },\n]);\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgrxFormsModule,\n    authRouting,\n    StoreModule.forFeature(authFeatureKey, authReducer, {\n      initialState: authInitialState,\n    }),\n    EffectsModule.forFeature([AuthEffects]),\n  ],\n  providers: [\n    AuthEffects,\n    AuthGuardService,\n    AuthService,\n    AuthFacade,\n    TokenInterceptorService,\n    LocalStorageJwtService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true,\n    },\n  ],\n  declarations: [LoginComponent, RegisterComponent],\n})\nexport class AuthModule {}\n","export { NgrxRouterModule } from './lib/ngrx-router.module';\nexport * from './lib/+state/router.actions';\n","import { Field, NgrxFormsFacade } from 'libs/ngrx-forms/src';\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { AuthFacade } from '../+state/auth.facade';\n\nconst structure: Field[] = [\n  {\n    type: 'INPUT',\n    name: 'email',\n    placeholder: 'Username',\n    validator: [Validators.required],\n  },\n  {\n    type: 'INPUT',\n    name: 'password',\n    placeholder: 'Password',\n    validator: [Validators.required],\n    attrs: {\n      type: 'password',\n    },\n  },\n];\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  structure$: Observable<Field[]>;\n  data$: Observable<any>;\n\n  constructor(private ngrxFormsFacade: NgrxFormsFacade, private facade: AuthFacade) {}\n\n  ngOnInit() {\n    this.ngrxFormsFacade.setStructure(structure);\n    this.data$ = this.ngrxFormsFacade.data$;\n    this.structure$ = this.ngrxFormsFacade.structure$;\n  }\n\n  updateForm(changes: any) {\n    this.ngrxFormsFacade.updateData(changes);\n  }\n\n  submit() {\n    this.facade.login();\n  }\n\n  ngOnDestroy() {\n    this.ngrxFormsFacade.initializeForm();\n  }\n}\n","<div class=\"auth-page\">\n  <div class=\"container page\">\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3 col-xs-12\">\n        <h1 class=\"text-xs-center\">Sign in</h1>\n        <p class=\"text-xs-center\">\n          <a [routerLink]=\"['/register']\">Need an account?</a>\n        </p>\n\n        <app-list-errors></app-list-errors>\n\n        <app-dynamic-form (updateForm)=\"updateForm($event)\" [data$]=\"data$\" [structure$]=\"structure$\">\n        </app-dynamic-form>\n        <button (click)=\"submit()\" class=\"btn btn-lg btn-primary pull-xs-right\" type=\"submit\">\n          Sign in\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Field } from '../../+state/ngrx-forms.interfaces';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InputComponent {\n  @Input() field: Field;\n  @Input() group: FormGroup;\n}\n","<fieldset [formGroup]=\"group\" class=\"form-group\">\n  <input\n    [formControlName]=\"field?.name\"\n    [attr.placeholder]=\"field?.placeholder\"\n    class=\"form-control form-control-lg\"\n    [attr.type]=\"field?.attrs?.type || 'text'\"\n  />\n</fieldset>\n","import { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport * as fromRouter from '@ngrx/router-store';\nimport { ActionReducerMap, createFeatureSelector } from '@ngrx/store';\n\nimport { RouterState, RouterStateUrl } from './router.interfaces';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CustomSerializer implements fromRouter.RouterStateSerializer<RouterStateUrl> {\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    const { url } = routerState;\n    const { queryParams } = routerState.root;\n\n    let state: ActivatedRouteSnapshot = routerState.root;\n    while (state.firstChild) {\n      state = state.firstChild;\n    }\n    const { params } = state;\n\n    return { url, queryParams, params };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { LocalStorageJwtService } from './local-storage-jwt.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(private storage: LocalStorageJwtService, private router: Router) {}\n\n  canActivate(): Observable<boolean> {\n    return this.storage.getItem().pipe(\n      map(token => {\n        if (!token) {\n          this.router.navigate(['/login']);\n          return false;\n        }\n        return true;\n      }),\n      take(1),\n    );\n  }\n}\n","import { AuthService } from '../auth.service';\nimport { NgrxFormsFacade, setErrors } from 'libs/ngrx-forms/src';\nimport * as fromNgrxForms from 'libs/ngrx-forms/src';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, exhaustMap, map, switchMap, tap, withLatestFrom } from 'rxjs/operators';\n\nimport * as AuthActions from './auth.actions';\nimport { LocalStorageJwtService } from '../local-storage-jwt.service';\n\n@Injectable()\nexport class AuthEffects {\n  getUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthActions.getUser),\n      switchMap(item =>\n        this.authService.user().pipe(\n          map(data => AuthActions.getUserSuccess({ user: data.user })),\n          catchError(error => of(AuthActions.getUserFail(error))),\n        ),\n      ),\n    ),\n  );\n\n  login$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthActions.login),\n      withLatestFrom(this.ngrxFormsFacade.data$),\n      exhaustMap(([action, data]) =>\n        this.authService.login(data).pipe(\n          map(response => AuthActions.loginSuccess({ user: response.user })),\n          catchError(result => of(fromNgrxForms.setErrors({ errors: result.error.errors }))),\n        ),\n      ),\n    ),\n  );\n\n  loginOrRegisterSuccess$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AuthActions.loginSuccess, AuthActions.registerSuccess),\n        tap(action => {\n          this.localStorageJwtService.setItem(action.user.token);\n          this.router.navigateByUrl('/');\n        }),\n      ),\n    { dispatch: false },\n  );\n\n  register$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthActions.register),\n      withLatestFrom(this.ngrxFormsFacade.data$),\n      exhaustMap(([action, data]) =>\n        this.authService.register(data).pipe(\n          map(response => AuthActions.registerSuccess({ user: response.user })),\n          catchError(result => of(setErrors({ errors: result.error.errors }))),\n        ),\n      ),\n    ),\n  );\n\n  logout$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AuthActions.logout),\n        tap(action => {\n          this.localStorageJwtService.removeItem();\n          this.router.navigateByUrl('login');\n        }),\n      ),\n    { dispatch: false },\n  );\n\n  constructor(\n    private actions$: Actions,\n    private localStorageJwtService: LocalStorageJwtService,\n    private ngrxFormsFacade: NgrxFormsFacade,\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { Auth, authFeatureKey } from './auth.reducer';\n\nexport const getAuth = createFeatureSelector<Auth>(authFeatureKey);\nexport const getLoggedIn = createSelector(getAuth, (auth: Auth) => auth.loggedIn);\nexport const getUser = createSelector(getAuth, (auth: Auth) => auth.user);\n\nexport const authQuery = {\n  getAuth,\n  getLoggedIn,\n  getUser,\n};\n","import { User } from 'libs/api/src';\nimport { createReducer, Action, on } from '@ngrx/store';\nimport * as AuthActions from './auth.actions';\n\nexport const authFeatureKey = 'auth';\n\nexport interface Auth {\n  loggedIn: boolean;\n  user: User;\n  status: Status;\n}\n\nexport interface AuthState {\n  readonly [authFeatureKey]: Auth;\n}\n\nexport enum Status {\n  INIT = 'INIT',\n  IN_PROGRESS = 'IN_PROGRESS',\n}\n\nexport const authInitialState: Auth = {\n  loggedIn: false,\n  status: Status.INIT,\n  user: {\n    email: '',\n    token: '',\n    username: '',\n    bio: '',\n    image: '',\n  },\n};\n\nconst reducer = createReducer(\n  authInitialState,\n  on(AuthActions.getUserSuccess, (state, action) => ({\n    ...state,\n    loggedIn: true,\n    user: action.user,\n  })),\n  on(AuthActions.getUserFail, (state, action) => ({\n    ...authInitialState,\n  })),\n  on(AuthActions.login, AuthActions.register, (state, _) => ({\n    ...state,\n    status: Status.IN_PROGRESS,\n  })),\n  on(AuthActions.registerSuccess, AuthActions.loginSuccess, (state, action) => ({\n    ...state,\n    loggedIn: true,\n    status: Status.INIT,\n    user: action.user,\n  })),\n  on(AuthActions.registerFail, AuthActions.loginFail, (state, _) => ({\n    ...state,\n    status: Status.INIT,\n  })),\n  on(AuthActions.logout, (state, action) => ({\n    ...authInitialState,\n  })),\n);\n\nexport function authReducer(state: Auth | undefined, action: Action): Auth {\n  return reducer(state, action);\n}\n","import { ApiService, UserResponse } from 'libs/api/src';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LoginUser, LoginUserRequest, NewUserRequest, NewUser } from './auth.interfaces';\n\n@Injectable()\nexport class AuthService {\n  constructor(private apiService: ApiService) {}\n\n  user(): Observable<UserResponse> {\n    return this.apiService.get<UserResponse>('/user');\n  }\n\n  login(credentials: LoginUser): Observable<UserResponse> {\n    return this.apiService.post<UserResponse, LoginUserRequest>('/users/login', { user: credentials });\n  }\n\n  register(credentials: NewUser): Observable<UserResponse> {\n    return this.apiService.post<UserResponse, NewUserRequest>('/users', { user: credentials });\n  }\n}\n","import { ApiModule } from 'libs/api/src';\nimport { AuthModule } from 'libs/auth/src';\nimport { NgrxErrorModule } from 'libs/ngrx-error/src';\nimport { NgrxRouterModule } from 'libs/ngrx-router/src';\nimport { NgrxFormsModule } from 'libs/ngrx-forms/src'\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { NxModule } from '@nrwl/angular';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { FooterComponent } from './layout/footer/footer.component';\nimport { NavbarComponent } from './layout/navbar/navbar.component';\n\n@NgModule({\n  imports: [\n    ApiModule,\n    AuthModule,\n    BrowserModule,\n    NxModule.forRoot(),\n    RouterModule.forRoot(\n      [\n        {\n          path: '',\n          loadChildren: () =>\n            import('@vms/vms-administration').then((m) => m.VmsAdministrationModule),\n        },\n        // {\n        //   path: 'article/:slug',\n        //   loadChildren: () =>\n        //     import('@vms/article/src/lib/article.module').then(\n        //       (m) => m.ArticleModule,\n        //     ),\n        // },\n        // {\n        //   path: 'settings',\n        //   loadChildren: () =>\n        //     import('@vms/settings/src/lib/settings.module').then(\n        //       (m) => m.SettingsModule,\n        //     ),\n        // },\n        // {\n        //   path: 'editor',\n        //   loadChildren: () =>\n        //     import('@vms/editor/src/lib/editor.module').then((m) => m.EditorModule),\n        // },\n        // {\n        //   path: 'profile/:username',\n        //   loadChildren: () =>\n        //     import('@vms/profile/src/lib/profile.module').then(\n        //       (m) => m.ProfileModule,\n        //     ),\n        // },\n      ],\n      {\n        initialNavigation: 'enabled',\n        useHash: true,\n        relativeLinkResolution: 'legacy',\n      },\n    ),\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([]),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    NgrxRouterModule,\n    NgrxErrorModule,\n    NgrxFormsModule\n  ],\n  declarations: [AppComponent, FooterComponent, NavbarComponent],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Errors } from './ngrx-forms.interfaces';\nimport { props, createAction } from '@ngrx/store';\n\nexport const setData = createAction('[ngrxForms] SET_DATA', props<{ data: any }>());\nexport const updateData = createAction('[ngrxForms] UPDATE_DATA', props<{ data: any }>());\nexport const setStructure = createAction('[ngrxForms] SET_STRUCTURE', props<{ structure: any }>());\nexport const setErrors = createAction('[ngrxForms] SET_ERRORS', props<{ errors: Errors }>());\nexport const initializeErrors = createAction('[ngrxForms] INITIALIZE_ERRORS');\nexport const initializeForm = createAction('[ngrxForms] INITIALIZE_FORM');\nexport const resetForm = createAction('[ngrxForms] RESET_FORM');\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { NgrxErrorState } from './ngrx-error.reducer';\nimport * as NgrxErrorActions from './ngrx-error.actions';\n\n@Injectable()\nexport class NgrxErrorFacade {\n  constructor(private store: Store<NgrxErrorState>) {}\n\n  throw401Error(error: HttpErrorResponse) {\n    this.store.dispatch(NgrxErrorActions.throw401Error({ error }));\n  }\n\n  throw404Error(error: HttpErrorResponse) {\n    this.store.dispatch(NgrxErrorActions.throw404Error({ error }));\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { NgrxFormsFacade } from '../+state/ngrx-forms.facade';\n\n@Component({\n  selector: 'app-list-errors',\n  templateUrl: './list-errors.component.html',\n  styleUrls: ['./list-errors.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ListErrorsComponent implements OnInit, OnDestroy {\n  errors: string[];\n  unsubscribe$: Subject<void> = new Subject();\n\n  constructor(private ngrxFormsFacade: NgrxFormsFacade, private changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    this.ngrxFormsFacade.errors$.subscribe(e => {\n      this.errors = Object.keys(e || {}).map(key => `${key} ${e[key]}`);\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n    this.ngrxFormsFacade.initializeErrors();\n  }\n}\n","<ul class=\"error-messages\" *ngIf=\"errors?.length > 0\">\n  <li *ngFor=\"let error of errors\">\n    {{ error }}\n  </li>\n</ul>\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { User } from 'libs/api/src';\n\n@Component({\n  selector: 'conduit-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavbarComponent {\n  @Input() user: User;\n  @Input() isLoggedIn: boolean;\n}\n","<nav class=\"navbar navbar-light\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\">conduit</a>\n    <!-- Logged out user -->\n    <ul *ngIf=\"!isLoggedIn\" class=\"nav navbar-nav pull-xs-right\">\n      <li class=\"nav-item\">\n        <!-- Add \"active\" class when you're on that page\" -->\n        <a class=\"nav-link\" routerLink=\"/\">Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/login\" routerLinkActive=\"active\">Sign in</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/register\" routerLinkActive=\"active\">Sign up</a>\n      </li>\n    </ul>\n\n    <!-- Logged in user -->\n    <ul *ngIf=\"isLoggedIn\" class=\"nav navbar-nav pull-xs-right\">\n      <li class=\"nav-item\">\n        <!-- Add \"active\" class when you're on that page\" -->\n        <a\n          class=\"nav-link active\"\n          [routerLink]=\"['/']\"\n          routerLinkActive=\"active\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n          >Home</a\n        >\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/editor\" routerLinkActive=\"active\">\n          <i class=\"ion-compose\"></i>&nbsp;New Post\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/settings\" routerLinkActive=\"active\">\n          <i class=\"ion-gear-a\"></i>&nbsp;Settings\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/profile', user.username]\" routerLinkActive=\"active\">\n          <img [src]=\"user.image\" *ngIf=\"user.image\" class=\"user-pic\" />\n          {{ user.username }}\n        </a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { ErrorHandler, NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { NgrxErrorEffects } from './+state/ngrx-error.effects';\nimport { ngrxErrorReducer, ngrxErrorInitialState, ngrxErrorFeatureKey } from './+state/ngrx-error.reducer';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgrxErrorInterceptorService } from './ngrx-error-interceptor.service';\nimport { NgrxErrorFacade } from './+state/ngrx-error.facade';\n\n@NgModule({\n  imports: [\n    StoreModule.forFeature(ngrxErrorFeatureKey, ngrxErrorReducer, {\n      initialState: ngrxErrorInitialState,\n    }),\n    EffectsModule.forFeature([NgrxErrorEffects]),\n  ],\n  providers: [\n    NgrxErrorFacade,\n    NgrxErrorEffects,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: NgrxErrorInterceptorService,\n      multi: true,\n    },\n  ],\n})\nexport class NgrxErrorModule {}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport { NgrxForms } from './ngrx-forms.interfaces';\nimport { ngrxFormsFeatureKey } from './ngrx-forms.reducer';\n\nconst getNgrxForms = createFeatureSelector<NgrxForms>(ngrxFormsFeatureKey);\nexport const getStructure = createSelector(getNgrxForms, (state: NgrxForms) => state.structure);\nexport const getData = createSelector(getNgrxForms, (state: NgrxForms) => state.data);\nexport const isValid = createSelector(getNgrxForms, (state: NgrxForms) => state.valid);\nexport const getErrors = createSelector(getNgrxForms, (state: NgrxForms) => state.errors);\nexport const getTouchedForm = createSelector(getNgrxForms, (state: NgrxForms) => state.touched);\n\nexport const ngrxFormsQuery = {\n  getStructure,\n  getData,\n  isValid,\n  getErrors,\n  getTouchedForm,\n};\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"XHEB\";","import { Location } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport { map, tap } from 'rxjs/operators';\nimport * as RouterActions from './router.actions';\n\n@Injectable()\nexport class RouterEffects {\n  navigate$ = createEffect(\n    () =>\n      this.action$.pipe(\n        ofType(RouterActions.go),\n        map(action => action.to),\n        tap(({ path, query: queryParams, extras }) => this.router.navigate(path, { queryParams, ...extras })),\n      ),\n    { dispatch: false },\n  );\n\n  navigateBack$ = createEffect(\n    () =>\n      this.action$.pipe(\n        ofType(RouterActions.back),\n        tap(() => this.location.back()),\n      ),\n    { dispatch: false },\n  );\n\n  navigateForward$ = createEffect(\n    () =>\n      this.action$.pipe(\n        ofType(RouterActions.forward),\n        tap(() => this.location.forward()),\n      ),\n    { dispatch: false },\n  );\n\n  constructor(private action$: Actions, private router: Router, private location: Location) {}\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'conduit-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FooterComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<footer>\n  <div class=\"container\">\n    <a href=\"/\" class=\"logo-font\">conduit</a>\n    <span class=\"attribution\">\n      An interactive learning project from\n      <a href=\"https://thinkster.io\">Thinkster</a>. Code &amp; design licensed under MIT.\n    </span>\n  </div>\n</footer>\n","import { Injectable } from '@angular/core';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport * as NgrxFormsActions from './ngrx-forms.actions';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class NgrxFormsEffects {\n  setData$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(NgrxFormsActions.setData, NgrxFormsActions.updateData),\n      map(action => NgrxFormsActions.initializeErrors()),\n    ),\n  );\n\n  constructor(private actions$: Actions) {}\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  Input,\n  OnChanges,\n  OnInit,\n  Type,\n  ViewContainerRef,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Field } from '../+state/ngrx-forms.interfaces';\nimport { InputComponent } from '../fields/input/input.component';\nimport { TextareaComponent } from '../fields/textarea/textarea.component';\n\nconst componentsMapper: { [key: string]: Type<any> } = {\n  INPUT: InputComponent,\n  TEXTAREA: TextareaComponent,\n};\n\n@Directive({\n  selector: '[appDynamicField]',\n})\nexport class DynamicFieldDirective implements OnInit, OnChanges {\n  @Input() field: Field;\n  @Input() group: FormGroup;\n  component: ComponentRef<any>;\n\n  constructor(private resolver: ComponentFactoryResolver, private container: ViewContainerRef) {}\n\n  ngOnChanges() {\n    if (this.component) {\n      this.component.instance.field = this.field;\n      this.component.instance.group = this.group;\n    }\n  }\n\n  ngOnInit() {\n    const component = this.resolver.resolveComponentFactory<any>(componentsMapper[this.field.type]);\n    this.component = this.container.createComponent(component);\n    this.component.instance.field = this.field;\n    this.component.instance.group = this.group;\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { createAction, props } from '@ngrx/store';\n\nexport const throw401Error = createAction('[ngrx-error] THROW_401_ERROR', props<{ error: HttpErrorResponse }>());\nexport const throw404Error = createAction('[ngrx-error] THROW_404_ERROR', props<{ error: HttpErrorResponse }>());\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api_url: \"https://localhost:44341/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { routerReducer, RouterStateSerializer, StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { StoreModule } from '@ngrx/store';\n\nimport { CustomSerializer } from './+state/custom-serializer';\nimport { RouterEffects } from './+state/router.effects';\nimport { ngrxRouterFeatureKey } from './+state/router.interfaces';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(ngrxRouterFeatureKey, routerReducer),\n    EffectsModule.forFeature([RouterEffects]),\n    StoreRouterConnectingModule.forRoot({ stateKey: ngrxRouterFeatureKey }),\n  ],\n  providers: [RouterEffects, [{ provide: RouterStateSerializer, useClass: CustomSerializer }]],\n})\nexport class NgrxRouterModule {}\n","export { AuthModule } from './lib/auth.module';\nexport * from './lib/+state/auth.actions';\nexport * from './lib/+state/auth.reducer';\nexport * from './lib/+state/auth.facade';\nexport * from './lib/auth-guard.service';\nexport * from './lib/local-storage-jwt.service';\n","import { Field, NgrxFormsFacade } from 'libs/ngrx-forms/src';\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { AuthFacade } from '../+state/auth.facade';\n\nconst structure: Field[] = [\n  {\n    type: 'INPUT',\n    name: 'username',\n    placeholder: 'Username',\n    validator: [Validators.required],\n  },\n  {\n    type: 'INPUT',\n    name: 'email',\n    placeholder: 'Email',\n    validator: [Validators.required],\n  },\n  {\n    type: 'INPUT',\n    name: 'password',\n    placeholder: 'Password',\n    validator: [Validators.required],\n    attrs: {\n      type: 'password',\n    },\n  },\n];\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  structure$: Observable<Field[]>;\n  data$: Observable<any>;\n\n  constructor(private ngrxFormsFacade: NgrxFormsFacade, private facade: AuthFacade) {}\n\n  ngOnInit() {\n    this.ngrxFormsFacade.setStructure(structure);\n    this.data$ = this.ngrxFormsFacade.data$;\n    this.structure$ = this.ngrxFormsFacade.structure$;\n  }\n\n  updateForm(changes: any) {\n    this.ngrxFormsFacade.updateData(changes);\n  }\n\n  submit() {\n    this.facade.register();\n  }\n\n  ngOnDestroy() {\n    this.ngrxFormsFacade.initializeForm();\n  }\n}\n","<div class=\"auth-page\">\n  <div class=\"container page\">\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3 col-xs-12\">\n        <h1 class=\"text-xs-center\">Sign in</h1>\n        <p class=\"text-xs-center\">\n          <a [routerLink]=\"['/login']\">Have an account?</a>\n        </p>\n\n        <!-- <app-list-errors></app-list-errors>\n\n        <app-dynamic-form (updateForm)=\"updateForm($event)\" [data$]=\"data$\" [structure$]=\"structure$\">\n        </app-dynamic-form> -->\n        <button (click)=\"submit()\" class=\"btn btn-lg btn-primary pull-xs-right\" type=\"submit\">\n          Sign up\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { NgrxErrorFacade } from './+state/ngrx-error.facade';\n\n@Injectable()\nexport class NgrxErrorInterceptorService implements HttpInterceptor {\n  constructor(private facade: NgrxErrorFacade) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      catchError((error, caught) => {\n        if (error instanceof HttpErrorResponse) {\n          switch (error.status) {\n            case 401:\n              this.facade.throw401Error(error);\n              break;\n            case 404:\n              this.facade.throw404Error(error);\n              break;\n            default:\n              throwError(error);\n              break;\n          }\n        }\n        return throwError(error);\n      }),\n    );\n  }\n}\n","import { NgrxForms } from './ngrx-forms.interfaces';\nimport * as NgrxFormsActions from './ngrx-forms.actions';\nimport { Action, createReducer, on } from '@ngrx/store';\n\nexport const ngrxFormsFeatureKey = 'ngrxForms';\n\nexport interface NgrxFormsState {\n  readonly [ngrxFormsFeatureKey]: NgrxForms;\n}\n\nexport const ngrxFormsInitialState: NgrxForms = {\n  data: {},\n  structure: [],\n  valid: true,\n  errors: {},\n  touched: false,\n};\n\nconst reducer = createReducer(\n  ngrxFormsInitialState,\n  on(NgrxFormsActions.setData, (state, action) => ({ ...state, data: action.data })),\n  on(NgrxFormsActions.updateData, (state, action) => {\n    const data = { ...state.data, ...action.data };\n    return { ...state, data, touched: true };\n  }),\n  on(NgrxFormsActions.setStructure, (state, action) => ({ ...state, structure: action.structure.slice(0) })),\n  on(NgrxFormsActions.setErrors, (state, action) => ({ ...state, errors: action.errors })),\n  on(NgrxFormsActions.initializeErrors, (state, action) => ({ ...state, errors: {} })),\n  on(NgrxFormsActions.initializeForm, (state, action) => ngrxFormsInitialState),\n  on(NgrxFormsActions.resetForm, (state, action) => ({ ...state, touched: false })),\n);\n\nexport function ngrxFormsReducer(state: NgrxForms | undefined, action: Action): NgrxForms {\n  return reducer(state, action);\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'vms-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less'],\n})\nexport class AppComponent {\n  title = 'vms-web';\n}\n","<router-outlet></router-outlet>","import { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { LocalStorageJwtService } from './local-storage-jwt.service';\n\n@Injectable()\nexport class TokenInterceptorService implements HttpInterceptor {\n  constructor(private localStorage: LocalStorageJwtService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let token: string;\n    this.localStorage.getItem().subscribe(t => (token = t));\n    if (token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Token ${token}`,\n        },\n      });\n    }\n    return next.handle(request);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiService } from './api.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule],\n  providers: [ApiService],\n})\nexport class ApiModule {}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { NgrxFormsState } from './ngrx-forms.reducer';\nimport { ngrxFormsQuery } from './ngrx-forms.selectors';\nimport * as NgrxFormsActions from './ngrx-forms.actions';\n\n@Injectable()\nexport class NgrxFormsFacade {\n  data$ = this.store.select(ngrxFormsQuery.getData);\n  structure$ = this.store.select(ngrxFormsQuery.getStructure);\n  errors$ = this.store.select(ngrxFormsQuery.getErrors);\n  touched$ = this.store.select(ngrxFormsQuery.getTouchedForm);\n\n  constructor(private store: Store<NgrxFormsState>) {}\n\n  setStructure(structure: any) {\n    this.store.dispatch(NgrxFormsActions.setStructure({ structure }));\n  }\n\n  setData(data: any) {\n    this.store.dispatch(NgrxFormsActions.setData({ data }));\n  }\n\n  updateData(data: any) {\n    this.store.dispatch(NgrxFormsActions.updateData({ data }));\n  }\n\n  initializeForm() {\n    this.store.dispatch(NgrxFormsActions.initializeForm());\n  }\n\n  initializeErrors() {\n    this.store.dispatch(NgrxFormsActions.initializeErrors());\n  }\n\n  resetForm() {\n    this.store.dispatch(NgrxFormsActions.resetForm());\n  }\n}\n","import { Params, NavigationExtras } from '@angular/router';\nimport * as fromRouter from '@ngrx/router-store';\n\nexport const ngrxRouterFeatureKey = 'router';\n\nexport interface RouterStateUrl {\n  url: string;\n  queryParams: Params;\n  params: Params;\n}\n\nexport interface RouterState {\n  readonly [ngrxRouterFeatureKey]: fromRouter.RouterReducerState<RouterStateUrl>;\n}\n\nexport interface NgrxRoute {\n  path: any[];\n  query?: object;\n  extras?: NavigationExtras;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'apps/vms-web/src/environments/environment';\n\n@Injectable()\nexport class ApiService {\n  constructor(private http: HttpClient) {}\n\n  get<T>(url: string, params: HttpParams = new HttpParams()): Observable<T> {\n    return this.http.get<T>(`${environment.api_url}${url}`, {\n      headers: this.headers,\n      params,\n    });\n  }\n\n  post<T, D>(url: string, data: D): Observable<T> {\n    return this.http.post<T>(`${environment.api_url}${url}`, JSON.stringify(data), { headers: this.headers });\n  }\n\n  put<T, D>(url: string, data: D): Observable<T> {\n    return this.http.put<T>(`${environment.api_url}${url}`, JSON.stringify(data), {\n      headers: this.headers,\n    });\n  }\n\n  delete<T>(url: string): Observable<T> {\n    return this.http.delete<T>(`${environment.api_url}${url}`, {\n      headers: this.headers,\n    });\n  }\n\n  get headers(): HttpHeaders {\n    const headersConfig = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    };\n\n    return new HttpHeaders(headersConfig);\n  }\n}\n","import { Component, OnInit, Input, ChangeDetectionStrategy, OnChanges } from '@angular/core';\nimport { Field } from '../../+state/ngrx-forms.interfaces';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-textarea',\n  templateUrl: './textarea.component.html',\n  styleUrls: ['./textarea.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TextareaComponent {\n  @Input() field: Field;\n  @Input() group: FormGroup;\n}\n","<fieldset [formGroup]=\"group\" class=\"form-group\">\n  <textarea\n    class=\"form-control form-control-lg\"\n    [attr.rows]=\"field?.attrs?.rows || 5\"\n    [formControlName]=\"field?.name\"\n    [attr.placeholder]=\"field?.placeholder\"\n  >\n  </textarea>\n</fieldset>\n"],"sourceRoot":"webpack:///"}